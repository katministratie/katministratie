@page "/"
@using Superkatten.Katministratie.Application.Contracts
@using Superkatten.Katministratie.Web.Services
@using Superkatten.Katministratie.Web.Components

@inject NavigationManager NavigationManager

<PageTitle>Superkatten</PageTitle>

<h1>Superkatten</h1>

@if (_superkatten is null)
{
    <p>Geen superkatten in het systeem...</p>
}
else
{
    <div>
        <Row>
            <div class="p-lg-1">
                <Button Type="@ButtonType.Primary" OnClick="OnCreateSuperkat">
                    Nieuwe kat
                </Button>
            </div>
            <div class="p-lg-1">
                <Button Type="@ButtonType.Primary" >
                    Report
                </Button>
            </div>
            <div class="p-lg-1">
                <Button Type="@ButtonType.Primary" OnClick="OnReload">
                    Reload
                </Button>
            </div>
        </Row>
    </div>
    
    <Divider Orientation="left" />

    <div>
        <Row>
            <ul>
            @foreach (var superkatEntry in Superkatten)
            {
                <li><SuperkatComponent SuperkatContext=superkatEntry /></li>
            }
            </ul>
        </Row>
    </div>
    
    <Divider Orientation="left" />

    <div>
        <Row>
            <Pagination Size="small" OnChange="OnPageChange" DefaultCurrent="@TotalPageCount" Total="@TotalCount" />
        </Row>
    </div>
}

@code {
    [Inject]
    public ISuperkattenListService? _superkattenService { get; set; }

    public List<Superkat>? _superkatten;
    public List<Superkat> Superkatten => _superkatten;

    private int TotalPageCount { get; set; } = 4;
    private int TotalCount { get; set; } = 0;
    private int StartIndex { get; set; } = 0;

    private async Task OnPageChange(PaginationEventArgs args) 
    {
        StartIndex = (args.Page - 1) * TotalPageCount;
        await UpdateListAsync();
    }

    protected override async Task OnInitializedAsync() => await UpdateListAsync();

    private async Task UpdateListAsync()
    {
        if (_superkattenService == null)
        {
            return;
        }

        var superkatten = await _superkattenService.GetAllSuperkattenAsync();
        TotalCount = superkatten.Count();
        _superkatten = superkatten
            .AsQueryable()
            .Where(s => s.Number >= StartIndex)
            .Take(TotalPageCount)
            .OrderByDescending(sk => sk.Number)
            .ToList();
    }

    private void OnCreateSuperkat()
    {
        NavigationManager.NavigateTo("CreateSuperkat");
    }

    private async Task OnReload()
    {
        await UpdateListAsync();
    }
}