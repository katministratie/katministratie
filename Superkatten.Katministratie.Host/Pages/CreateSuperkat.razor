@page "/CreateSuperkat"

@using Superkatten.Katministratie.Application.Entities
@using Superkatten.Katministratie.Domain.Entities
@using Superkatten.Katministratie.Host.Services

@inject NavigationManager NavigationManager
@inject ISuperkattenListService _superkattenService
@inject MessageService _message
@inject NotificationService _notice

<PageTitle>Nieuwe superkat</PageTitle>

<Row Class="border mb-2">
    <Col Class="col-4">
        <Button Block="@true" Disabled="@ValidCatchLocation" OnClick="@OnOk">Ok</Button>
    </Col>
    <Col Class="col-4">
        <Button Block="@true" Disabled="@ValidCatchLocation" OnClick="@OnOkAndNew">Nieuwe kat</Button>
    </Col>
    <Col Class="col-4">
        <Button Block="@true" OnClick="@OnCancel">Terug</Button>
    </Col>
</Row>

<Divider />

<Row Class="mb-2">
    <Col Class="col-12">
        <Input Placeholder="Voer vanglokatie in"  Size="@InputSize.Large" @bind-Value="@parameters.CatchLocation" >
            <Prefix>
                <Icon Type="border-inner" />
            </Prefix>
        </Input>
    </Col>
</Row>
    
<Row Class="mb-2">
    <Col Class="col-12">
        Nummer van het hok: 
        <AntDesign.InputNumber 
            Min="1"
            Max="50"
            Disabled="@ValidCatchLocation" 
            DefaultValue="1" 
            Size="@InputSize.Small" 
            @bind-Value="@parameters.CageNumber"/>    
    </Col>
</Row>

<Row Class="mb-2">
    <Col Class="col-12">
        Kat gaat retour:
        <Switch Disabled="@ValidCatchLocation" @bind-Checked="@parameters.Retour"></Switch>
    </Col>
</Row>

<Row Class="mb-2">
    <Col Class="col-12">
        <Row Class="">
            <Col Class="me-2">
                Is een kitten:
            </Col>

            <Col Class="me-2">
                <Switch Disabled="@ValidCatchLocation" @bind-Checked="@parameters.IsKitten"></Switch>
            </Col>
        
            <Col Class="me-2">
                @if (@parameters.IsKitten)
                {
                    <p>Weken oud:</p>
                }
                else
                {
                    <p>Jaren oud:</p>
                }
            </Col>
            <Col>
                <AntDesign.InputNumber 
                    Min="1"
                    Disabled="@ValidCatchLocation" 
                    DefaultValue="1" 
                    Size="@InputSize.Small" 
                    @bind-Value="@parameters.EstimatedWeeksOld"/>
            </Col>
        </Row>
    </Col>
</Row>

<Row Class="mb-2">
    <Col Class="col-12">
        <RadioGroup @bind-Value="@parameters.Gender">
        <Radio RadioButton Value="@(Gender.Molly)">Poes</Radio>
        <Radio RadioButton Value="@(Gender.Tomcat)">Kater</Radio>
        <Radio RadioButton Value="@(Gender.Unknown)">Onbekend</Radio>
    </RadioGroup>
    </Col>
</Row>

<Row Class="mb-2">
    <Col Class="col-12">
        Vangdatum: 
        <DatePicker Disabled="@ValidCatchLocation" 
            Bordered="@false" 
            TValue="DateTime?" 
            Picker="@DatePickerType.Date" 
            OnChange="OnChangeCatchDate" 
            DefaultValue="@InitialDateTimeNow" 
            Placeholder="@VangdatumText"/>
    </Col>
</Row>


@code 
{
    private string VangdatumText { get; init; } = "Vangdatum";
    private string GeboortedatumText { get; init; } = "Geboortedatum";
    private DateTime InitialDateTimeNow => DateTime.UtcNow;

    private bool ValidCatchLocation => string.IsNullOrWhiteSpace(parameters.CatchLocation);

    private void OnChangeCatchDate(DateTimeChangedEventArgs args)
    {
        parameters.CatchDate = args.Date;
    }

    private void OnChangeBirthDate(DateTimeChangedEventArgs args)
    {
        parameters.CatchDate = args.Date;
    }

    private CreateSuperkatParameters parameters =
        new CreateSuperkatParameters()
            {
                CatchDate = DateTime.UtcNow,
                CatchLocation = string.Empty,
                Area = Domain.Entities.CatArea.Unknown,
                CageNumber = null,
                Behaviour = Domain.Entities.CatBehaviour.Unknown,
                Retour = false,
                IsKitten = true,
                Gender = Gender.Unknown
            };

    public async Task OnOk()
    {
        await StoreSuperkat();
        NavigationManager.NavigateTo("/");
    }

    public async Task OnOkAndNew()
    {
        await StoreSuperkat();
        await _message.Warning("Voer de volgende superkat in", 2);
    }

    public void OnCancel()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task StoreSuperkat()
    {
        var superkat = await _superkattenService.CreateSuperkatAsync(parameters);
        if (superkat is null)
        {
            await _message.Error($"Fout bij het opslaan van de nieuwe superkat.", 3);
            return;
        }

        await _message.Success($"Superkat is opgeslagen onder nummer {superkat.DisplayableNumber}", 3);        
    }
}
