@using Superkatten.Katministratie.Application.Contracts
@using Superkatten.Katministratie.Web.Services

@inject ISuperkatActionService _superkatActionService

<div class="container border">
    <div class="row">
        <div class="col-2">
            @if(Context.Reserved)
            {
                <SuperkatAction OnClickCallback="@ToggleReserve" TooltipText="Reserveer de kat" ActionIcon="favorite_border" />                
            }
            else
            {
                <SuperkatAction OnClickCallback="@ToggleReserve" TooltipText="Maak reservatie ongedaan" ActionIcon="do_not_disturb" />
            }
        </div>

        <div class="col-2">
                  <SuperkatAction OnClickCallback="@ToggleRetour" TooltipText="Kat gaat terug naar vanglocatie" ActionIcon="@(Context.Retour ? "autorenew" : "arrow_forward")" />                
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Superkat Context { get; set; } = new();

    [Parameter]
    public EventCallback<Superkat> ContextChanged { get; set; }

    private bool BusyWithAction = false;

    private async Task ToggleReserve()
    {
        await _superkatActionService.ToggleReserveSuperkatAsync(Context.Number);
        await ContextChanged.InvokeAsync(Context = new Superkat
        {
            Name = "Deze is veranderd",
            Reserved = !Context.Reserved
        });

    }

    private void ToggleRetour()
    {
        _superkatActionService.ToggleRetourSuperkatAsync(Context.Number);
    }
}
