@using Superkatten.Katministratie.Application.Contracts
@using Superkatten.Katministratie.Web.Services

@inject ISuperkatActionService _superkatActionService

<div class="container border">
    <div class="row">
        <div class="col-2">
            @if(Context is not null && Context.Reserved)
            {
                <SuperkatAction OnClickCallback="@ReserveSuperkat" ActionName="Reserve" ActionIcon="lock" />
            }
            else
            {
                <span class="material-icons">no_encryption_gmailerrorred</span>  
            }
        </div>

        <div class="col-2">
            @if(Context is not null && Context.IsGoingRetour)
            {
                <SuperkatAction OnClickCallback="@SwitchGoingRetour" ActionName="Retour" ActionIcon="find_replace" />
            }
            else
            {
                <span class="material-icons">no_encryption_gmailerrorred</span>  
            }
        </div>


        <div class="col-2">
            <SuperkatAction OnClickCallback="@ReserveSuperkat" ActionName="D" ActionIcon="settings_input_antenna" />
        </div>

        <div class="col-2">
            <SuperkatAction OnClickCallback="@ReserveSuperkat" ActionName="D" ActionIcon="dangerous" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Superkat Context { get; set; } = new();

    private void ReserveSuperkat()
    {
        _superkatActionService.ReserveSuperkatAsync(Context.Number);
    }

    private void SwitchGoingRetour()
    {
        _superkatActionService.RetourSuperkatAsync(Context.Number);
    }
}
